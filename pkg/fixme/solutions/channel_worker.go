package solutions

import (
	"sync"
)

// Worker правильно реализует шаблон рабочих потоков с использованием каналов
// Функция запускает указанное количество рабочих горутин,
// каждая из которых читает задачи из входного канала, обрабатывает их
// и отправляет результаты в выходной канал до закрытия входного канала
func Worker(jobs <-chan int, results chan<- int, numWorkers int) {
	var wg sync.WaitGroup

	// Запускаем указанное количество рабочих
	for i := 0; i < numWorkers; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()
			// Каждый рабочий обрабатывает задачи из канала jobs
			for job := range jobs {
				// Обрабатываем задачу (возводим в квадрат)
				results <- job * job
			}
		}()
	}

	// Горутина для закрытия канала результатов после завершения всех рабочих
	go func() {
		wg.Wait()
		close(results)
	}()
}
